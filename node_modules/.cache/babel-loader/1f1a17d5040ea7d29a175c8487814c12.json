{"ast":null,"code":"import * as R from 'ramda';\nexport const getPhoneById = (state, id) => R.prop(id, state.phones);\nexport const getPhones = state => {\n  const phones = R.map(id => getPhoneById(state, id), state.phonesPage.ids);\n  return phones;\n};\nexport const getRenderedPhonesLength = state => R.length(state.phonesPage.ids);\nexport const getTotalBasketCount = state => R.length(state.basket);\nexport const getTotalBasketPrice = state => {\n  const totalPrice = R.compose(R.sum, R.pluck(\"price\"), R.map(id => getPhoneById(state, id)))(state.basket);\n  return totalPrice;\n};","map":{"version":3,"sources":["/home/olga/my-app/src/node_modules/selectors.js"],"names":["R","getPhoneById","state","id","prop","phones","getPhones","map","phonesPage","ids","getRenderedPhonesLength","length","getTotalBasketCount","basket","getTotalBasketPrice","totalPrice","compose","sum","pluck"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAeH,CAAC,CAACI,IAAF,CAAOD,EAAP,EAAWD,KAAK,CAACG,MAAjB,CAApC;AAEP,OAAO,MAAMC,SAAS,GAAGJ,KAAK,IAAI;AACjC,QAAMG,MAAM,GAAGL,CAAC,CAACO,GAAF,CAAMJ,EAAE,IAAIF,YAAY,CAACC,KAAD,EAAQC,EAAR,CAAxB,EAAqCD,KAAK,CAACM,UAAN,CAAiBC,GAAtD,CAAf;AACA,SAAOJ,MAAP;AACA,CAHM;AAKP,OAAO,MAAMK,uBAAuB,GAAGR,KAAK,IAAIF,CAAC,CAACW,MAAF,CAAST,KAAK,CAACM,UAAN,CAAiBC,GAA1B,CAAzC;AAEP,OAAO,MAAMG,mBAAmB,GAAGV,KAAK,IAAIF,CAAC,CAACW,MAAF,CAAST,KAAK,CAACW,MAAf,CAArC;AAEP,OAAO,MAAMC,mBAAmB,GAAGZ,KAAK,IAAI;AAC1C,QAAMa,UAAU,GAAGf,CAAC,CAACgB,OAAF,CACjBhB,CAAC,CAACiB,GADe,EAEjBjB,CAAC,CAACkB,KAAF,CAAQ,OAAR,CAFiB,EAGjBlB,CAAC,CAACO,GAAF,CAAMJ,EAAE,IAAIF,YAAY,CAACC,KAAD,EAAQC,EAAR,CAAxB,CAHiB,EAIfD,KAAK,CAACW,MAJS,CAAnB;AAME,SAAOE,UAAP;AACH,CARM","sourcesContent":["import * as R from 'ramda'\n\nexport const getPhoneById = (state, id) => R.prop(id, state.phones)\n\nexport const getPhones = state => {\n\tconst phones = R.map(id => getPhoneById(state, id), state.phonesPage.ids)\n\treturn phones\n}\n\nexport const getRenderedPhonesLength = state => R.length(state.phonesPage.ids)\n\nexport const getTotalBasketCount = state => R.length(state.basket)\n\nexport const getTotalBasketPrice = state => {\n  const totalPrice = R.compose(\n    R.sum,\n    R.pluck(\"price\"),\n    R.map(id => getPhoneById(state, id))\n    )(state.basket)\n\n    return totalPrice\n}"]},"metadata":{},"sourceType":"module"}