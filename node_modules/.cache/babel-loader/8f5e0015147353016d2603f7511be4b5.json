{"ast":null,"code":"import { FETCH_PHONES_SUCCESS, FETCH_PHONES_FAILURE, FETCH_PHONES_START, LOAD_MORE_PHONES_SUCCESS, LOAD_MORE_PHONES_FAILURE, LOAD_MORE_PHONES_START, FETCH_PHONE_BY_ID_START, FETCH_PHONE_BY_ID_SUCCESS, FETCH_PHONE_BY_ID_FAILURE, ADD_PHONE_TO_BASKET, SEARCH_PHONE, FETCH_CATEGORIES_SUCCESS, FETCH_CATEGORIES_FAILURE, FETCH_CATEGORIES_START, REMOVE_PHONE_FROM_BASKET, CLEAN_BASKET } from 'actionTypes';\nimport { fetchPhones as fetchPhonesApi, loadMorePhones as loadMorePhonesApi, fetchPhoneById as fetchPhoneByIdApi, fetchCategories as fetchCategoriesApi } from './api';\nimport { getRenderedPhonesLength } from 'selectors';\nexport const fetchPhones = () => async dispatch => {\n  dispatch({\n    type: FETCH_PHONES_START\n  });\n\n  try {\n    const phones = await fetchPhonesApi();\n    dispatch({\n      type: FETCH_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLength(getState());\n  dispatch({\n    type: LOAD_MORE_PHONES_START\n  });\n\n  try {\n    const phones = await loadMorePhonesApi({\n      offset\n    });\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\nexport const fetchPhoneById = id => async dispatch => {\n  dispatch({\n    type: FETCH_PHONE_BY_ID_START\n  });\n\n  try {\n    const phone = await fetchPhoneByIdApi(id);\n    dispatch({\n      type: FETCH_PHONE_BY_ID_SUCCESS,\n      payload: phone\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONE_BY_ID_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\nexport const addPhoneToBasket = id => dispatch => {\n  dispatch({\n    type: ADD_PHONE_TO_BASKET,\n    payload: id\n  });\n};\nexport const searchPhone = text => dispatch => {\n  dispatch({\n    type: SEARCH_PHONE,\n    payload: text\n  });\n};\nexport const fetchCategories = () => async dispatch => {\n  dispatch({\n    type: FETCH_CATEGORIES_START\n  });\n\n  try {\n    const categories = await fetchCategoriesApi();\n    dispatch({\n      type: FETCH_CATEGORIES_SUCCESS,\n      payload: categories\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_CATEGORIES_FAILURE,\n      payload: err,\n      error: true\n    });\n  }\n};\nexport const removePhoneFromBasket = id => dispatch => {\n  dispatch({\n    type: REMOVE_PHONE_FROM_BASKET,\n    payload: id\n  });\n};\nexport const cleanBasket = () => dispatch => {\n  dispatch({\n    type: CLEAN_BASKET\n  });\n};\nexport const basketCheckout = phones => () => {\n  alert(JSON.stringify(phones));\n};","map":{"version":3,"sources":["/home/olga/my-app/src/node_modules/actions/index.js"],"names":["FETCH_PHONES_SUCCESS","FETCH_PHONES_FAILURE","FETCH_PHONES_START","LOAD_MORE_PHONES_SUCCESS","LOAD_MORE_PHONES_FAILURE","LOAD_MORE_PHONES_START","FETCH_PHONE_BY_ID_START","FETCH_PHONE_BY_ID_SUCCESS","FETCH_PHONE_BY_ID_FAILURE","ADD_PHONE_TO_BASKET","SEARCH_PHONE","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_FAILURE","FETCH_CATEGORIES_START","REMOVE_PHONE_FROM_BASKET","CLEAN_BASKET","fetchPhones","fetchPhonesApi","loadMorePhones","loadMorePhonesApi","fetchPhoneById","fetchPhoneByIdApi","fetchCategories","fetchCategoriesApi","getRenderedPhonesLength","dispatch","type","phones","payload","err","error","getState","offset","id","phone","addPhoneToBasket","searchPhone","text","categories","removePhoneFromBasket","cleanBasket","basketCheckout","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import {\n  FETCH_PHONES_SUCCESS,\n  FETCH_PHONES_FAILURE,\n  FETCH_PHONES_START,\n  LOAD_MORE_PHONES_SUCCESS,\n  LOAD_MORE_PHONES_FAILURE,\n  LOAD_MORE_PHONES_START,\n  FETCH_PHONE_BY_ID_START,\n  FETCH_PHONE_BY_ID_SUCCESS,\n  FETCH_PHONE_BY_ID_FAILURE,\n  ADD_PHONE_TO_BASKET,\n  SEARCH_PHONE,\n  FETCH_CATEGORIES_SUCCESS,\n  FETCH_CATEGORIES_FAILURE,\n  FETCH_CATEGORIES_START,\n  REMOVE_PHONE_FROM_BASKET,\n  CLEAN_BASKET\n} from 'actionTypes'\nimport {\n  fetchPhones as fetchPhonesApi,\n  loadMorePhones as loadMorePhonesApi,\n  fetchPhoneById as fetchPhoneByIdApi,\n  fetchCategories as fetchCategoriesApi\n} from './api'\nimport {getRenderedPhonesLength} from 'selectors'\n\nexport const fetchPhones = () => async dispatch => {\n  dispatch({\n\t  type: FETCH_PHONES_START\n  })\n\n  try {\n    const phones = await fetchPhonesApi()\n    dispatch({\n   \t  type: FETCH_PHONES_SUCCESS,\n  \t  payload: phones\n    })\n  } catch (err) {\n    dispatch({\n  \t  type: FETCH_PHONES_FAILURE,\n  \t  payload: err,\n      error: true\n    })\n  }\n}\n\nexport const loadMorePhones = () => async (dispatch, getState) => {\n  const offset = getRenderedPhonesLength(getState())\n  dispatch({\n    type: LOAD_MORE_PHONES_START\n  })\n\n  try {\n    const phones = await loadMorePhonesApi({offset})\n    dispatch({\n      type: LOAD_MORE_PHONES_SUCCESS,\n      payload: phones\n    })\n  } catch (err) {\n    dispatch({\n      type: LOAD_MORE_PHONES_FAILURE,\n      payload: err,\n      error: true\n    })\n  }\n}\n\nexport const fetchPhoneById = id => async dispatch => {\n  dispatch({type: FETCH_PHONE_BY_ID_START})\n\n  try {\n    const phone = await fetchPhoneByIdApi(id)\n    dispatch({\n      type: FETCH_PHONE_BY_ID_SUCCESS,\n      payload: phone\n    })\n  } catch (err) {\n    dispatch({\n      type: FETCH_PHONE_BY_ID_FAILURE,\n      payload: err,\n      error: true\n    })\n  }\n}\n\nexport const addPhoneToBasket = id => dispatch => {\n  dispatch({\n    type: ADD_PHONE_TO_BASKET,\n    payload: id\n  })\n}\n\nexport const searchPhone = text => dispatch => {\n  dispatch({\n    type: SEARCH_PHONE,\n    payload: text\n  })\n}\n\nexport const fetchCategories = () => async dispatch => {\n  dispatch({\n    type: FETCH_CATEGORIES_START\n  })\n\n  try {\n    const categories = await fetchCategoriesApi()\n    dispatch({\n      type: FETCH_CATEGORIES_SUCCESS,\n      payload: categories\n    })\n  } catch (err) {\n    dispatch({\n      type: FETCH_CATEGORIES_FAILURE,\n      payload: err,\n      error: true\n    })\n  }\n}\n\nexport const removePhoneFromBasket = id => dispatch => {\n  dispatch({\n    type: REMOVE_PHONE_FROM_BASKET,\n    payload: id\n  })\n}\n\nexport const cleanBasket = () => dispatch => {\n  dispatch({\n    type: CLEAN_BASKET\n  })\n}\n\nexport const basketCheckout = phones => () => {\n  alert(JSON.stringify(phones))\n}"]},"metadata":{},"sourceType":"module"}