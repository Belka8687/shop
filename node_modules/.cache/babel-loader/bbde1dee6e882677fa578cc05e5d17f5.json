{"ast":null,"code":"import * as R from 'ramda';\nimport { FETCH_PHONES_SUCCESS, LOAD_MORE_PHONES_SUCCESS, FETCH_PHONE_BY_ID_SUCCESS } from 'actionTypes';\nconst initialState = {};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_PHONES_SUCCESS:\n      const newValues = R.indexBy(R.prop('id'), payload);\n      return R.merge(state, newValues);\n\n    case LOAD_MORE_PHONES_SUCCESS:\n      const moreValues = R.indexBy(R.prop('id'), payload);\n      return R.merge(state, moreValues);\n\n    case FETCH_PHONE_BY_ID_SUCCESS:\n      return R.assoc(payload.id, payload, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/olga/my-app/src/node_modules/reducers/phones.js"],"names":["R","FETCH_PHONES_SUCCESS","LOAD_MORE_PHONES_SUCCESS","FETCH_PHONE_BY_ID_SUCCESS","initialState","state","type","payload","newValues","indexBy","prop","merge","moreValues","assoc","id"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAEA,SACCC,oBADD,EAECC,wBAFD,EAGEC,yBAHF,QAIO,aAJP;AAMA,MAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,CAACC,KAAK,GAAGD,YAAT,EAAuB;AAACE,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAvB,KAA0C;AACxD,UAAQD,IAAR;AACC,SAAKL,oBAAL;AACE,YAAMO,SAAS,GAAGR,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,IAAF,CAAO,IAAP,CAAV,EAAwBH,OAAxB,CAAlB;AACA,aAAOP,CAAC,CAACW,KAAF,CAAQN,KAAR,EAAeG,SAAf,CAAP;;AACF,SAAKN,wBAAL;AACE,YAAMU,UAAU,GAAGZ,CAAC,CAACS,OAAF,CAAUT,CAAC,CAACU,IAAF,CAAO,IAAP,CAAV,EAAwBH,OAAxB,CAAnB;AACA,aAAOP,CAAC,CAACW,KAAF,CAAQN,KAAR,EAAeO,UAAf,CAAP;;AACA,SAAKT,yBAAL;AACE,aAAOH,CAAC,CAACa,KAAF,CAAQN,OAAO,CAACO,EAAhB,EAAoBP,OAApB,EAA6BF,KAA7B,CAAP;;AACJ;AACE,aAAOA,KAAP;AAVH;AAYA,CAbD","sourcesContent":["import * as R from 'ramda'\n\nimport {\n\tFETCH_PHONES_SUCCESS,\n\tLOAD_MORE_PHONES_SUCCESS,\n  FETCH_PHONE_BY_ID_SUCCESS\n} from 'actionTypes'\n\nconst initialState = {}\n\nexport default (state = initialState, {type,payload}) => {\n\tswitch (type) {\n\t\tcase FETCH_PHONES_SUCCESS:\n\t\t  const newValues = R.indexBy(R.prop('id'), payload)\n\t\t  return R.merge(state, newValues)\n\t\tcase LOAD_MORE_PHONES_SUCCESS:\n\t\t  const moreValues = R.indexBy(R.prop('id'), payload)\n\t\t  return R.merge(state, moreValues)\n    case FETCH_PHONE_BY_ID_SUCCESS:\n      return R.assoc(payload.id, payload, state)\n\t\tdefault:\n\t\t  return state\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}