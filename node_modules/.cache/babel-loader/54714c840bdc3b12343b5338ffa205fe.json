{"ast":null,"code":"import * as R from 'ramda';\nimport { FETCH_PHONES_SUCCESS, LOAD_MORE_PHONES_SUCCESS, SEARCH_PHONE } from 'actionTypes';\nconst initialState = {\n  ids: [],\n  search: ''\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_PHONES_SUCCESS:\n      return R.merge(state, {\n        ids: R.pluck('id', payload)\n      });\n\n    case LOAD_MORE_PHONES_SUCCESS:\n      const ids = R.pluck('id', payload);\n      return R.merge(state, {\n        ids: R.concat(state.ids, ids)\n      });\n\n    case SEARCH_PHONE:\n      return R.merge(state, {\n        search: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/olga/my-app/src/node_modules/reducers/phonesPage.js"],"names":["R","FETCH_PHONES_SUCCESS","LOAD_MORE_PHONES_SUCCESS","SEARCH_PHONE","initialState","ids","search","state","type","payload","merge","pluck","concat"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAEA,SACCC,oBADD,EAECC,wBAFD,EAGEC,YAHF,QAIQ,aAJR;AAMA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,GAAG,EAAE,EADe;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAACI,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAvB,KAA2C;AACzD,UAAQD,IAAR;AACC,SAAKP,oBAAL;AACE,aAAOD,CAAC,CAACU,KAAF,CAAQH,KAAR,EAAe;AACrBF,QAAAA,GAAG,EAAEL,CAAC,CAACW,KAAF,CAAQ,IAAR,EAAcF,OAAd;AADgB,OAAf,CAAP;;AAGF,SAAKP,wBAAL;AACE,YAAMG,GAAG,GAAGL,CAAC,CAACW,KAAF,CAAQ,IAAR,EAAcF,OAAd,CAAZ;AACA,aAAOT,CAAC,CAACU,KAAF,CAAQH,KAAR,EAAe;AACrBF,QAAAA,GAAG,EAAEL,CAAC,CAACY,MAAF,CAASL,KAAK,CAACF,GAAf,EAAoBA,GAApB;AADgB,OAAf,CAAP;;AAGA,SAAKF,YAAL;AACA,aAAOH,CAAC,CAACU,KAAF,CAAQH,KAAR,EAAe;AACpBD,QAAAA,MAAM,EAAEG;AADY,OAAf,CAAP;;AAGF;AACA,aAAOF,KAAP;AAfD;AAiBA,CAlBD","sourcesContent":["import * as R from 'ramda'\n\nimport {\n\tFETCH_PHONES_SUCCESS,\n\tLOAD_MORE_PHONES_SUCCESS,\n  SEARCH_PHONE\n\t} from 'actionTypes'\n\nconst initialState = {\n\tids: [],\n  search: ''\n}\nexport default (state = initialState, {type, payload}) => {\n\tswitch (type) {\n\t\tcase FETCH_PHONES_SUCCESS:\n\t\t  return R.merge(state, {\n\t\t  \tids: R.pluck('id', payload)\n\t\t  })\n\t\tcase LOAD_MORE_PHONES_SUCCESS:\n\t\t  const ids = R.pluck('id', payload)\n\t\t  return R.merge(state, {\n\t\t  \tids: R.concat(state.ids, ids)\n\t\t  })\n    case SEARCH_PHONE:\n    return R.merge(state, {\n      search: payload\n    })\n\t\tdefault:\n\t\treturn state \n\t}\n}"]},"metadata":{},"sourceType":"module"}